package MazeProblems;

public class NQueensProblem {
    public static void main(String[] args) {
        int n = 5;
        boolean[][] board = new boolean[n][n];
        System.out.println(NQueens(board, 0));
    }
    private static int NQueens(boolean[][] board, int row){
        if (row == board.length) {
            display(board);
            return 1;
        }
        int count = 0;
        for (int col = 0; col < board[0].length; col++) {
            if (isSafe(board,row,col)){
                board[row][col] = true;
                count += NQueens(board, row + 1);
                board[row][col] = false;
            }
        }
        return count;
    }

    private static boolean isSafe(boolean[][] board, int row, int col) {
        //for checking vertically upwards:
        for (int i = 0; i < row; i++) {
            if (board[i][col])
                return false;
        }
        //for checking left diagonal:
        for (int i = 1; i <= Math.min(row,col); i++) {
            if (board[row-i][col-i])
                return false;
        }
        //for checking right diagonal:
        for (int i = 0; i <= Math.min(row,board.length-col-1); i++) {
            if (board[row-i][col+i])
                return false;
        }
        return true;
    }

    private static void display(boolean[][] board) {
        for (boolean[] row: board) {
            for (boolean b: row) {
                if (b)
                    System.out.print("Q ");
                else
                    System.out.print("X ");
            }
            System.out.println();
        }
        System.out.println();
    }
}
